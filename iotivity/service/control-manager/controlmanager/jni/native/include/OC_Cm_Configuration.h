//******************************************************************
//
// Copyright 2014 Samsung Electronics All Rights Reserved.
//
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=


/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class OC_Cm_Configuration */

#ifndef _Included_OC_Cm_Configuration
#define _Included_OC_Cm_Configuration
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     OC_Cm_Configuration
 * Method:    constructNative
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_OC_Cm_Configuration_constructNative
(JNIEnv *, jobject);

/*
 * Class:     OC_Cm_Configuration
 * Method:    deleteNative
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_OC_Cm_Configuration_deleteNative
(JNIEnv *, jobject, jlong);

/*
 * Class:     OC_Cm_Configuration
 * Method:    reset
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_OC_Cm_Configuration_reset
(JNIEnv *, jobject, jlong);

/*
 * Class:     OC_Cm_Configuration
 * Method:    setDeviceFactory
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_OC_Cm_Configuration_setDeviceFactory
(JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     OC_Cm_Configuration
 * Method:    setSerializableDataFactory
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_OC_Cm_Configuration_setSerializableDataFactory
(JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     OC_Cm_Configuration
 * Method:    setResourceHandlerFactory
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_OC_Cm_Configuration_setResourceHandlerFactory
(JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     OC_Cm_Configuration
 * Method:    addDataFormat
 * Signature: (JLjava/lang/String;LOC/Cm/Serialization/ISerializer;LOC/Cm/Serialization/IDeserializer;)V
 */
JNIEXPORT void JNICALL Java_OC_Cm_Configuration_addDataFormat
(JNIEnv *, jobject, jlong, jstring, jobject, jobject);

/*
 * Class:     OC_Cm_Configuration
 * Method:    setServerConnector
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_OC_Cm_Configuration_setServerConnector
(JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     OC_Cm_Configuration
 * Method:    setClientConnector
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_OC_Cm_Configuration_setClientConnector
(JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     OC_Cm_Configuration
 * Method:    getClientConnectors
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_OC_Cm_Configuration_getClientConnectors
(JNIEnv *, jobject, jlong);

/*
 * Class:     OC_Cm_Configuration
 * Method:    getDeSerializers
 * Signature: (J)Ljava/util/Map;
 */
JNIEXPORT jobject JNICALL Java_OC_Cm_Configuration_getDeSerializers
(JNIEnv *, jobject, jlong);

/*
 * Class:     OC_Cm_Configuration
 * Method:    getDeviceFactory
 * Signature: (J)LOC/Cm/DeviceFinder/DeviceFactory;
 */
JNIEXPORT jobject JNICALL Java_OC_Cm_Configuration_getDeviceFactory
(JNIEnv *, jobject, jlong);

/*
 * Class:     OC_Cm_Configuration
 * Method:    getResourceHandlerFactory
 * Signature: (J)LOC/Cm/Server/ResourceHandler/ResourceHandlerFactory;
 */
JNIEXPORT jobject JNICALL Java_OC_Cm_Configuration_getResourceHandlerFactory
(JNIEnv *, jobject, jlong);

/*
 * Class:     OC_Cm_Configuration
 * Method:    getSerializableDataFactory
 * Signature: (J)LOC/Cm/Serialization/SerializableDataFactory;
 */
JNIEXPORT jobject JNICALL Java_OC_Cm_Configuration_getSerializableDataFactory
(JNIEnv *, jobject, jlong);

/*
 * Class:     OC_Cm_Configuration
 * Method:    getSerializers
 * Signature: (J)Ljava/util/Map;
 */
JNIEXPORT jobject JNICALL Java_OC_Cm_Configuration_getSerializers
(JNIEnv *, jobject, jlong);

/*
 * Class:     OC_Cm_Configuration
 * Method:    getServerConnectors
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_OC_Cm_Configuration_getServerConnectors
(JNIEnv *, jobject, jlong);

/*
 * Class:     OC_Cm_Configuration
 * Method:    getAppType
 * Signature: (J)LOC/Cm/ApplicationType;
 */
JNIEXPORT jobject JNICALL Java_OC_Cm_Configuration_getAppType
(JNIEnv *, jobject, jlong);

/*
 * Class:     OC_Cm_Configuration
 * Method:    setAppType
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_OC_Cm_Configuration_setAppType
(JNIEnv *, jobject, jlong, jint);

/*
 * Class:     OC_Cm_Configuration
 * Method:    getSubscriptionDbPath
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_OC_Cm_Configuration_getSubscriptionDbPath
(JNIEnv *, jobject, jlong);

/*
 * Class:     OC_Cm_Configuration
 * Method:    setSubscriptionDbPath
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_OC_Cm_Configuration_setSubscriptionDbPath
(JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     OC_Cm_Configuration
 * Method:    setRAConfigPath
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_OC_Cm_Configuration_setRAConfigPath__JLjava_lang_String_2
(JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     OC_Cm_Configuration
 * Method:    getRAConfigPath
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_OC_Cm_Configuration_getRAConfigPath
(JNIEnv *, jobject, jlong);

/*
 * Class:     OC_Cm_Configuration
 * Method:    setRAConfigPath
 * Signature: (JLjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL
Java_OC_Cm_Configuration_setRAConfigPath__JLjava_lang_String_2Ljava_lang_String_2
(JNIEnv *, jobject, jlong, jstring, jstring);

/*
 * Class:     OC_Cm_Configuration
 * Method:    getRAPrivateKey
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_OC_Cm_Configuration_getRAPrivateKey
(JNIEnv *, jobject, jlong);

/*
 * Class:     OC_Cm_Configuration
 * Method:    setRemoteAccessEnable
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_OC_Cm_Configuration_setRemoteAccessEnable
(JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     OC_Cm_Configuration
 * Method:    getRemoteAccessConfig
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_OC_Cm_Configuration_getRemoteAccessConfig
(JNIEnv *, jobject, jlong);

/*
 * Class:     OC_Cm_Configuration
 * Method:    setWifiDetails
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_OC_Cm_Configuration_setWifiDetails
(JNIEnv *, jobject, jlong, jlong);

#ifdef __cplusplus
}
#endif
#endif
