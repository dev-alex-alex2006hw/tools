##
#sample-app build script
##

Import('env')

# Add third party libraries
lib_env = env.Clone()
SConscript(env.get('SRC_DIR') + '/service/third_party_libs.scons', 'lib_env')

sample_env = lib_env.Clone()
target_os = env.get('TARGET_OS')
######################################################################
# Build flags
######################################################################
sample_env.AppendUnique(CPPPATH = ['../../plugin-manager/src/',
				'../../lib/cpluff/libcpluff/'])
if target_os not in ['windows', 'winrt']:
	sample_env.AppendUnique(CXXFLAGS = ['-Wall', '-pthread', '-std=c++0x'])

sample_env.AppendUnique(LIBS = ['oc', 'oc_logger', 'octbstack', 'coap', 'ppm', 'pmimpl', 'dl'])
######################################################################
# Source files and Targets
######################################################################
fanclient = sample_env.Program('fanclient', 'fan-control/fanclient.cpp')

Alias('fanclient', fanclient)
env.AppendTarget('fanclient')