//******************************************************************
//
// Copyright 2014 Samsung Electronics All Rights Reserved.
//
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=



#include "DevicesResourceHandler.h"
#include "MyDevice.h"


DevicesResourceHandler::DevicesResourceHandler(OC::Cm::IContext *pContext)
    : OC::Cm::Server::ResourceHandler::SyncResourceHandler(pContext)
{
}

DevicesResourceHandler::~DevicesResourceHandler()
{
}

/******************************** NOTE: DO NOT modify below code ********************************/
bool
DevicesResourceHandler::handleSyncResource( OC::Cm::Connector::Server::ServerSession &session,
        std::string methodId,
        int &statusCode,
        OC::Cm::Serialization::ISerializable *request,
        OC::Cm::Serialization::ISerializable *response)
{

    if ( 0 == methodId.compare("GET"))
    {
        if ( false == OC::Cm::Server::ResourceHandler::SyncResourceHandler::validateRepresentation(response,
                EN_DEVICES )) { statusCode = 404 ; return true ; }
        this->onGET(session, statusCode, (::Devices *)response);
    }
    else if ( 0 == methodId.compare("POST"))
    {
        if ( false == OC::Cm::Server::ResourceHandler::SyncResourceHandler::validateRepresentation(request,
                EN_DEVICE )) { statusCode = 404 ; return true ; }
        std::string location ;
        this->onPOST(session, statusCode, (::Device *)request, location);
        session.getResponse().m_headers.setHeader("location", location);
    }
    else
    { statusCode = 405 ; session.getResponse().m_headers.setHeader( "Allow", "GET, POST") ;}

    return true ;
}

bool
DevicesResourceHandler::onGET( OC::Cm::Connector::Server::ServerSession &session, int &statusCode,
                               ::Devices *respData)
{
    // TODO: Autogenerated code. Add Resource implementation here
    return MyDevice::getInstance()->getDevices(respData);
}

bool
DevicesResourceHandler::onPOST( OC::Cm::Connector::Server::ServerSession &session, int &statusCode,
                                ::Device *reqData, std::string &location)
{
    // TODO: Autogenerated code. Add Resource implementation here
    // TODO: Default Status Code is: 501 - Not Implemented.  Replace Default Status Code based on implementation!
    statusCode = 501;
    return true ;
}
