//******************************************************************
//
// Copyright 2014 Samsung Electronics All Rights Reserved.
//
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=


/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class OC_Cm_Serialization_IDeserializer */

#ifndef _Included_OC_Cm_Serialization_IDeserializer
#define _Included_OC_Cm_Serialization_IDeserializer
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    parse
 * Signature: (JLjava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_OC_Cm_Serialization_IDeserializer_parse
(JNIEnv *, jobject, jlong, jstring, jint);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    getStringPropertyValue
 * Signature: (JLjava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_OC_Cm_Serialization_IDeserializer_getStringPropertyValue
(JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    getBoolPropertyValue
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_OC_Cm_Serialization_IDeserializer_getBoolPropertyValue
(JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    getGroupProperty
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_OC_Cm_Serialization_IDeserializer_getGroupProperty
(JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    getIntPropertyValue
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_OC_Cm_Serialization_IDeserializer_getIntPropertyValue
(JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    getDoublePropertyValue
 * Signature: (JLjava/lang/String;)D
 */
JNIEXPORT jdouble JNICALL Java_OC_Cm_Serialization_IDeserializer_getDoublePropertyValue
(JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    getIsArray
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_OC_Cm_Serialization_IDeserializer_getIsArray
(JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    getSize
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_OC_Cm_Serialization_IDeserializer_getSize
(JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    setCurrentProperty
 * Signature: (JLjava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_OC_Cm_Serialization_IDeserializer_setCurrentProperty
(JNIEnv *, jobject, jlong, jstring, jint);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    getSchemaInstanceType
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_OC_Cm_Serialization_IDeserializer_getSchemaInstanceType
(JNIEnv *, jobject, jlong);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    hasGroupProperty
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_OC_Cm_Serialization_IDeserializer_hasGroupProperty
(JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    hasProperty
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_OC_Cm_Serialization_IDeserializer_hasProperty
(JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    setCurrentArrayIndex
 * Signature: (JLjava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_OC_Cm_Serialization_IDeserializer_setCurrentArrayIndex
(JNIEnv *, jobject, jlong, jstring, jint);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    isInFilteringMode
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_OC_Cm_Serialization_IDeserializer_isInFilteringMode
(JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    isRecursive
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_OC_Cm_Serialization_IDeserializer_isRecursive
(JNIEnv *, jobject, jlong);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    validateMandatory
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_OC_Cm_Serialization_IDeserializer_validateMandatory
(JNIEnv *, jobject, jlong);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    setErrorMessage
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_OC_Cm_Serialization_IDeserializer_setErrorMessage
(JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    getLongPropertyValue
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_OC_Cm_Serialization_IDeserializer_getLongPropertyValue
(JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    setIDExcemption
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_OC_Cm_Serialization_IDeserializer_setIDExcemption
(JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    getIDExcemption
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_OC_Cm_Serialization_IDeserializer_getIDExcemption
(JNIEnv *, jobject, jlong);

/*
 * Class:     OC_Cm_Serialization_IDeserializer
 * Method:    removeParameter
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_OC_Cm_Serialization_IDeserializer_removeParameter
(JNIEnv *, jobject, jlong, jstring);

#ifdef __cplusplus
}
#endif
#endif
