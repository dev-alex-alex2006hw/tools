//******************************************************************
//
// Copyright 2014 Samsung Electronics All Rights Reserved.
//
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

#include "HumidityResourceHandler.h"
#include "log.h"

HumidityResourceHandler::HumidityResourceHandler(OC::Cm::IContext *pContext) :
    OC::Cm::Server::ResourceHandler::SyncResourceHandler(pContext)
{
}

HumidityResourceHandler::~HumidityResourceHandler()
{
}

bool HumidityResourceHandler::handleSyncResource(std::string methodId,
        int &statusCode, OC::Cm::Serialization::ISerializable *request,
        OC::Cm::Serialization::ISerializable *response)
{

    if (0 == methodId.compare("GET"))
    {
        if (false
            == OC::Cm::Server::ResourceHandler::SyncResourceHandler::validateRepresentation(
                response, EN_HUMIDITY))
        {
            statusCode = 404;
            return true;
        }
        this->onGET(statusCode, (::Humidity *) response);
    }
    else if (0 == methodId.compare("PUT"))
    {
        if (false
            == OC::Cm::Server::ResourceHandler::SyncResourceHandler::validateRepresentation(
                request, EN_HUMIDITY))
        {
            statusCode = 404;
            return true;
        }
        this->onPUT(statusCode, (::Humidity *) request);
    }
    else
    {
        statusCode = 405;
    }


    CE(printf("######### HumidityResourceHandler::handleSyncResource 2  ##############\n"));

    return true;
}

bool HumidityResourceHandler::onGET(int &statusCode, ::Humidity *respData)
{
    // TODO: Autogenerated code. Add Resource implementation here
    // TODO: Default Status Code is: 501 - Not Implemented.  Replace Default Status Code based on implementation!
    //statusCode = 501;

    CE(printf("!!!! HumidityResourceHandler::onGET \n"));

    Float32 *mCurrent = new Float32();
    mCurrent->value = 80.0;
    respData->mpCurrent = mCurrent;

    Float32 *mDesired = new Float32();
    mDesired->value = 50.0;
    respData->mpDesired = mDesired;

    HumidityUnitType *mUnit = new HumidityUnitType();
    mUnit->value = "Percentage";
    respData->mpUnit = mUnit;

    statusCode = 200;
    return true;
}

bool HumidityResourceHandler::onPUT(int &statusCode, ::Humidity *reqData)
{
    // TODO: Autogenerated code. Add Resource implementation here
    // TODO: Default Status Code is: 501 - Not Implemented.  Replace Default Status Code based on implementation!
    //statusCode = 501;

    CE(printf("********* HumidityResourceHandler::onPUT \n"));

    Float32 *mCurrent = new Float32();
    mCurrent->value = 90.0;
    reqData->mpCurrent = mCurrent;

    Float32 *mDesired = new Float32();
    mDesired->value = 50.0;
    reqData->mpDesired = mDesired;

    HumidityUnitType *mUnit = new HumidityUnitType();
    mUnit->value = "Percentage";
    reqData->mpUnit = mUnit;

    statusCode = 200;
    return true;
}

bool HumidityResourceHandler::onGET(
    OC::Cm::Connector::Server::ServerSession &session, int &statusCode,
    ::Humidity *respData)
{
    // TODO: Autogenerated code. Add Resource implementation here
    // TODO: Default Status Code is: 501 - Not Implemented.  Replace Default Status Code based on implementation!
    statusCode = 501;
    return true;
}

bool HumidityResourceHandler::onPUT(
    OC::Cm::Connector::Server::ServerSession &session, int &statusCode,
    ::Humidity *reqData)
{
    // TODO: Autogenerated code. Add Resource implementation here
    // TODO: Default Status Code is: 501 - Not Implemented.  Replace Default Status Code based on implementation!
    statusCode = 501;
    return true;
}

